import mysql
from typing import Callable
from mysql.connector import connect, Error
import getpass
import build_database.src.queries as q


class DataBaseHandler:

    USERNAME: str
    PASSWORD: str
    DATABASE_CONNECTION: mysql.connector.connection_cext.CMySQLConnection
    CURSOR: mysql.connector.cursor_cext.CMySQLCursor

    def __init__(self) -> None:
        self.USERNAME = input("Enter username: ")
        self.PASSWORD = getpass.getpass("Password: ")
        self._initiate_database()
        self._build_database_base()

    def _initiate_database(self) -> None:
        try:
            self.DATABASE_CONNECTION = connect(
                host="localhost", user=self.USERNAME, password=self.PASSWORD
            )
            self.CURSOR = self.DATABASE_CONNECTION.cursor()
        except Error:
            print("Could not connect to database!")
            raise Error

    def _build_database_base(self):
        query = self._get_build_query()
        self.CURSOR.execute(query)
        self.CURSOR.close()
        print("Database created!")

    def insert_user_generated_data(self, member_generator: Callable[..., str], num_of_members: int):
        for _ in range(num_of_members):
            self._initiate_database()
            new_member = member_generator()
            new_member.setup_personal_stats()
            query = f'{q.insert_member}({new_member.get_structured_output()}); COMMIT;'
            self.CURSOR.execute(q.using_db)
            self.CURSOR.execute(query)
            self.CURSOR.close()

        print(f'Added {num_of_members} new autogenerated members!')


    @staticmethod
    def _get_build_query() -> str:
        return q.build_query
